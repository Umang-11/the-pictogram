[{"C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\index.js":"1","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\reportWebVitals.js":"2","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\App.js":"3","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\SignUp.js":"4","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\Profile.js":"5","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\SignIn.js":"6","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\Home.js":"7","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\UserProfile.js":"8","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\Navbar.js":"9","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\MyFollowingPost.js":"10","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\Modal.js":"11","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\Createpost.js":"12","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\context\\LoginContext.js":"13","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\PostDetail.js":"14","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\ProfilePic.js":"15"},{"size":535,"mtime":1696570475062,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1696570475375,"results":"18","hashOfConfig":"17"},{"size":1752,"mtime":1697285944401,"results":"19","hashOfConfig":"17"},{"size":3500,"mtime":1697367613883,"results":"20","hashOfConfig":"17"},{"size":2603,"mtime":1697367681082,"results":"21","hashOfConfig":"17"},{"size":2473,"mtime":1697367724972,"results":"22","hashOfConfig":"17"},{"size":8707,"mtime":1697367895221,"results":"23","hashOfConfig":"17"},{"size":3783,"mtime":1697367766387,"results":"24","hashOfConfig":"17"},{"size":1279,"mtime":1697203500221,"results":"25","hashOfConfig":"17"},{"size":8845,"mtime":1697285673001,"results":"26","hashOfConfig":"17"},{"size":1388,"mtime":1697203057333,"results":"27","hashOfConfig":"17"},{"size":3285,"mtime":1697274943370,"results":"28","hashOfConfig":"17"},{"size":90,"mtime":1697196516472,"results":"29","hashOfConfig":"17"},{"size":3604,"mtime":1697367635934,"results":"30","hashOfConfig":"17"},{"size":2814,"mtime":1697367655549,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cgmupj",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\index.js",[],[],"C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\reportWebVitals.js",[],[],"C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\App.js",["88","89"],[],"import logo from './logo.svg';\nimport React, { createContext, useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport SignUp from \"./components/SignUp\";\nimport SignIn from \"./components/SignIn\";\nimport Profie from \"./components/Profile\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Createpost from \"./components/Createpost\";\nimport { LoginContext } from \"./context/LoginContext\";\nimport Modal from \"./components/Modal\";\nimport UserProfie from \"./components/UserProfile\";\nimport MyFolliwngPost from \"./components/MyFollowingPost\";\n\nfunction App() {\n  const [userLogin, setUserLogin] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <LoginContext.Provider value={{ setUserLogin, setModalOpen }}>\n          <Navbar login={userLogin} />\n          <Routes>\n            <Route path=\"/\" element={<Home />}></Route>\n            <Route path=\"/signup\" element={<SignUp />}></Route>\n            <Route path=\"/signin\" element={<SignIn />}></Route>\n            <Route exact path=\"/profile\" element={<Profie />}></Route>\n            <Route path=\"/createPost\" element={<Createpost />}></Route>\n            <Route path=\"/profile/:userid\" element={<UserProfie />}></Route>\n            <Route path=\"/followingpost\" element={<MyFolliwngPost />}></Route>\n          </Routes>\n          <ToastContainer theme=\"dark\" />\n\n          {modalOpen && <Modal setModalOpen={setModalOpen}></Modal>}\n        </LoginContext.Provider>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\SignUp.js",["90","91","92","93","94"],[],"import React,{useState} from 'react'\r\nimport logo from \"../img/logo2.png\";\r\nimport \"./SignUp.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport default function SignUp() {\r\n  const navigate = useNavigate()\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\")\r\n  const [userName, setUserName] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  // Toast functions\r\n  const notifyA = (msg) => toast.error(msg)\r\n  const notifyB = (msg) => toast.success(msg)\r\n\r\n  const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n  const passRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/\r\n\r\n  const postData = () => {\r\n    //checking email\r\n    if (!emailRegex.test(email)) {\r\n      notifyA(\"Invalid email\")\r\n      return\r\n    } else if (!passRegex.test(password)) {\r\n      notifyA(\"Password must contain at least 8 characters, including at least 1 number and 1 includes both lower and uppercase letters and special characters for example #,?,!\")\r\n      return\r\n    }\r\n\r\n    // Sending data to server\r\n    fetch(\"/signup\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name: name,\r\n        userName: userName,\r\n        email: email,\r\n        password: password\r\n\r\n      })\r\n    }).then(res => res.json())\r\n      .then(data => {\r\n        if (data.error) {\r\n          notifyA(data.error)\r\n        } else {\r\n          notifyB(data.message)\r\n          navigate(\"/signin\")\r\n        }\r\n        console.log(data)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"signUp\">\r\n      <div className=\"form-container\">\r\n        <div className=\"form\">\r\n          <img className=\"signUpLogo\" src={logo} alt=\"\" />\r\n          <p className=\"loginPara\">\r\n            Sign up to see photos and videos <br /> from your friends\r\n          </p>\r\n          <div>\r\n            <input type=\"email\" name=\"email\" id=\"email\" value={email} placeholder=\"Email\" onChange={(e) => { setEmail(e.target.value) }} />\r\n          </div>\r\n          <div>\r\n            <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Full Name\" value={name} onChange={((e) => { setName(e.target.value) })} />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              placeholder=\"Username\"\r\n              value={userName}\r\n              onChange={(e) => { setUserName(e.target.value) }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => { setPassword(e.target.value) }}\r\n            />\r\n          </div>\r\n          <p\r\n            className=\"loginPara\"\r\n            style={{ fontSize: \"12px\", margin: \"3px 0px\" }}\r\n          >\r\n            By signing up, you agree to out Terms, <br /> privacy policy and\r\n            cookies policy.\r\n          </p>\r\n          <input type=\"submit\" id=\"submit-btn\" value=\"Sign Up\" onClick={() => { postData() }} />\r\n        </div>\r\n        <div className=\"form2\">\r\n          Already have an account ?\r\n          <Link to=\"/signin\">\r\n            <span style={{ color: \"blue\", cursor: \"pointer\" }}>Sign In</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\Profile.js",["95","96"],[],"import React, { useEffect, useState } from \"react\";\r\nimport PostDetail from \"./PostDetail\";\r\nimport \"./Profile.css\";\r\nimport ProfilePic from \"./ProfilePic\";\r\n\r\nexport default function Profie() {\r\n  var picLink = \"https://cdn-icons-png.flaticon.com/128/3177/3177440.png\"\r\n  const [pic, setPic] = useState([]);\r\n  const [show, setShow] = useState(false)\r\n  const [posts, setPosts] = useState([]);\r\n  const [user, setUser] = useState(\"\")\r\n  const [changePic, setChangePic] = useState(false)\r\n\r\n\r\n  const toggleDetails = (posts) => {\r\n    if (show) {\r\n      setShow(false);\r\n    } else {\r\n      setShow(true);\r\n      setPosts(posts);\r\n    }\r\n  };\r\n\r\n  const changeprofile = () => {\r\n    if (changePic) {\r\n      setChangePic(false)\r\n    } else {\r\n      setChangePic(true)\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(`/user/${JSON.parse(localStorage.getItem(\"user\"))._id}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result)\r\n        setPic(result.post);\r\n        setUser(result.user)\r\n        console.log(pic);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      {/* Profile frame */}\r\n      <div className=\"profile-frame\">\r\n        {/* profile-pic */}\r\n        <div className=\"profile-pic\">\r\n          <img\r\n            onClick={changeprofile}\r\n            src={user.Photo ? user.Photo : picLink}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        {/* profile-data */}\r\n        <div className=\"pofile-data\">\r\n          <h1>{JSON.parse(localStorage.getItem(\"user\")).name}</h1>\r\n          <div className=\"profile-info\" style={{ display: \"flex\" }}>\r\n            <p>{pic ? pic.length : \"0\"} posts</p>\r\n            <p>{user.followers ? user.followers.length : \"0\"} followers</p>\r\n            <p>{user.following ? user.following.length : \"0\"} following</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr\r\n        style={{\r\n          width: \"90%\",\r\n\r\n          opacity: \"0.8\",\r\n          margin: \"25px auto\",\r\n        }}\r\n      />\r\n      {/* Gallery */}\r\n      <div className=\"gallery\">\r\n        {pic.map((pics) => {\r\n          return <img key={pics._id} src={pics.photo}\r\n            onClick={() => {\r\n              toggleDetails(pics)\r\n            }}\r\n            className=\"item\"></img>;\r\n        })}\r\n      </div>\r\n      {show &&\r\n        <PostDetail item={posts} toggleDetails={toggleDetails} />\r\n      }\r\n      {\r\n        changePic &&\r\n        <ProfilePic changeprofile={changeprofile} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\SignIn.js",["97","98"],[],"import React, { useState, useContext } from \"react\";\r\nimport \"./SignIn.css\";\r\nimport logo from \"../img/logo2.png\"\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { LoginContext } from \"../context/LoginContext\";\r\n\r\nexport default function SignIn() {\r\n  const { setUserLogin } = useContext(LoginContext)\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  // Toast functions\r\n  const notifyA = (msg) => toast.error(msg)\r\n  const notifyB = (msg) => toast.success(msg)\r\n  \r\n  const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n  const postData = () => {\r\n    //checking email\r\n    if (!emailRegex.test(email)) {\r\n      notifyA(\"Invalid email\")\r\n      return\r\n    }\r\n    // Sending data to server\r\n    fetch(\"/signin\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password\r\n\r\n      })\r\n    }).then(res => res.json())\r\n      .then(data => {\r\n        if (data.error) {\r\n          notifyA(data.error)\r\n        } else {\r\n          notifyB(data.message)\r\n          console.log(data)\r\n          localStorage.setItem(\"jwt\", data.token)\r\n          localStorage.setItem(\"user\", JSON.stringify(data.user))\r\n\r\n          setUserLogin(true)\r\n          navigate(\"/\")\r\n        }\r\n        console.log(data)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"signIn\">\r\n      <div>\r\n        <div className=\"loginForm\">\r\n          <img className=\"signUpLogo\" src={logo} alt=\"\" />\r\n          <div>\r\n            <input type=\"email\" name=\"email\" id=\"email\" value={email} placeholder=\"Email\" onChange={(e) => { setEmail(e.target.value) }} />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => { setPassword(e.target.value) }}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" id=\"login-btn\" onClick={() => { postData() }} value=\"Sign In\" />\r\n        </div>\r\n        <div className=\"loginForm2\">\r\n          Don't have an account ?\r\n          <Link to=\"/signup\">\r\n            <span style={{ color: \"blue\", cursor: \"pointer\" }}>Sign Up</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\Home.js",["99","100","101","102"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home() {\r\n  var picLink = \"https://cdn-icons-png.flaticon.com/128/3177/3177440.png\"\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [item, setItem] = useState([]);\r\n\r\n  // Toast functions\r\n  const notifyA = (msg) => toast.error(msg);\r\n  const notifyB = (msg) => toast.success(msg);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (!token) {\r\n      navigate(\"./signup\");\r\n    }\r\n\r\n    // Fetching all posts\r\n    fetch(\"/allposts\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setData(result);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  // to show and hide comments\r\n  const toggleComment = (posts) => {\r\n    if (show) {\r\n      setShow(false);\r\n    } else {\r\n      setShow(true);\r\n      setItem(posts);\r\n    }\r\n  };\r\n\r\n  const likePost = (id) => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((posts) => {\r\n          if (posts._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return posts;\r\n          }\r\n        });\r\n        setData(newData);\r\n        console.log(result);\r\n      });\r\n  };\r\n  const unlikePost = (id) => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((posts) => {\r\n          if (posts._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return posts;\r\n          }\r\n        });\r\n        setData(newData);\r\n        console.log(result);\r\n      });\r\n  };\r\n\r\n  // function to make comment\r\n  const makeComment = (text, id) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        text: text,\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((posts) => {\r\n          if (posts._id === result._id) {\r\n            return result;\r\n          } else {\r\n            return posts;\r\n          }\r\n        });\r\n        setData(newData);\r\n        setComment(\"\");\r\n        notifyB(\"Comment posted\");\r\n        console.log(result);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {/* card */}\r\n      {data.map((posts) => {\r\n        return (\r\n          <div className=\"card\">\r\n            {/* card header */}\r\n            <div className=\"card-header\">\r\n              <div className=\"card-pic\">\r\n                <img\r\n                  src={posts.postedBy.Photo ? posts.postedBy.Photo : picLink}\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <h5>\r\n                <Link to={`/profile/${posts.postedBy._id}`}>\r\n                  {posts.postedBy.name}\r\n                </Link>\r\n              </h5>\r\n            </div>\r\n            {/* card image */}\r\n            <div className=\"card-image\">\r\n              <img src={posts.photo} alt=\"\" />\r\n            </div>\r\n\r\n            {/* card content */}\r\n            <div className=\"card-content\">\r\n              {posts.likes.includes(\r\n                JSON.parse(localStorage.getItem(\"user\"))._id\r\n              ) ? (\r\n                <span\r\n                  className=\"material-symbols-outlined material-symbols-outlined-red\"\r\n                  onClick={() => {\r\n                    unlikePost(posts._id);\r\n                  }}\r\n                >\r\n                  favorite\r\n                </span>\r\n              ) : (\r\n                <span\r\n                  className=\"material-symbols-outlined\"\r\n                  onClick={() => {\r\n                    likePost(posts._id);\r\n                  }}\r\n                >\r\n                  favorite\r\n                </span>\r\n              )}\r\n\r\n              <p>{posts.likes.length} Likes</p>\r\n              <p>{posts.body} </p>\r\n              <p\r\n                style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  toggleComment(posts);\r\n                }}\r\n              >\r\n                View all comments\r\n              </p>\r\n            </div>\r\n\r\n            {/* add Comment */}\r\n            <div className=\"add-comment\">\r\n              <span className=\"material-symbols-outlined\">mood</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Add a comment\"\r\n                value={comment}\r\n                onChange={(e) => {\r\n                  setComment(e.target.value);\r\n                }}\r\n              />\r\n              <button\r\n                className=\"comment\"\r\n                onClick={() => {\r\n                  makeComment(comment, posts._id);\r\n                }}\r\n              >\r\n                Post\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {/* show Comment */}\r\n      {show && (\r\n        <div className=\"showComment\">\r\n          <div className=\"container\">\r\n            <div className=\"postPic\">\r\n              <img src={item.photo} alt=\"\" />\r\n            </div>\r\n            <div className=\"details\">\r\n              {/* card header */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{ borderBottom: \"1px solid #00000029\" }}\r\n              >\r\n                <div className=\"card-pic\">\r\n                  <img\r\n                    src=\"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29ufGVufDB8MnwwfHw%3D&auto=format&fit=crop&w=500&q=60\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h5>{item.postedBy.name}</h5>\r\n              </div>\r\n\r\n              {/* commentSection */}\r\n              <div\r\n                className=\"comment-section\"\r\n                style={{ borderBottom: \"1px solid #00000029\" }}\r\n              >\r\n                {item.comments.map((comment) => {\r\n                  return (\r\n                    <p className=\"comm\">\r\n                      <span\r\n                        className=\"commenter\"\r\n                        style={{ fontWeight: \"bolder\" }}\r\n                      >\r\n                        {comment.postedBy.name}{\" \"}\r\n                      </span>\r\n                      <span className=\"commentText\">{comment.comment}</span>\r\n                    </p>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              {/* card content */}\r\n              <div className=\"card-content\">\r\n                <p>{item.likes.length} Likes</p>\r\n                <p>{item.body}</p>\r\n              </div>\r\n\r\n              {/* add Comment */}\r\n              <div className=\"add-comment\">\r\n                <span className=\"material-symbols-outlined\">mood</span>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add a comment\"\r\n                  value={comment}\r\n                  onChange={(e) => {\r\n                    setComment(e.target.value);\r\n                  }}\r\n                />\r\n                <button\r\n                  className=\"comment\"\r\n                  onClick={() => {\r\n                    makeComment(comment, item._id);\r\n                    toggleComment();\r\n                  }}\r\n                >\r\n                  Post\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"close-comment\"\r\n            onClick={() => {\r\n              toggleComment();\r\n            }}\r\n          >\r\n            <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\r\n              close\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\UserProfile.js",["103","104","105"],[],"import React, { useEffect, useState } from \"react\";\r\nimport PostDetail from \"./PostDetail\";\r\nimport \"./Profile.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function UserProfie() {\r\n  var picLink = \"https://cdn-icons-png.flaticon.com/128/3177/3177440.png\";\r\n  const { userid } = useParams();\r\n  const [isFollow, setIsFollow] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  // to follow user\r\n  const followUser = (userId) => {\r\n    fetch(\"/follow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        followId: userId,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setIsFollow(true);\r\n      });\r\n  };\r\n\r\n  // to unfollow user\r\n  const unfollowUser = (userId) => {\r\n    fetch(\"/unfollow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        followId: userId,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        res.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        setIsFollow(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`/user/${userid}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setUser(result.user);\r\n        setPosts(result.post);\r\n        if (\r\n          result.user.followers.includes(\r\n            JSON.parse(localStorage.getItem(\"user\"))._id\r\n          )\r\n        ) {\r\n          setIsFollow(true);\r\n        }\r\n      });\r\n  }, [isFollow]);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      {/* Profile frame */}\r\n      <div className=\"profile-frame\">\r\n        {/* profile-pic */}\r\n        <div className=\"profile-pic\">\r\n          <img src={user.Photo ? user.Photo : picLink} alt=\"\" />\r\n        </div>\r\n        {/* profile-data */}\r\n        <div className=\"pofile-data\">\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <h1>{user.name}</h1>\r\n            <button\r\n              className=\"followBtn\"\r\n              onClick={() => {\r\n                if (isFollow) {\r\n                  unfollowUser(user._id);\r\n                } else {\r\n                  followUser(user._id);\r\n                }\r\n              }}\r\n            >\r\n              {isFollow ? \"Unfollow\" : \"Follow\"}\r\n            </button>\r\n          </div>\r\n          <div className=\"profile-info\" style={{ display: \"flex\" }}>\r\n            <p>{posts.length} posts</p>\r\n            <p>{user.followers ? user.followers.length : \"0\"} followers</p>\r\n            <p>{user.following ? user.following.length : \"0\"} following</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr\r\n        style={{\r\n          width: \"90%\",\r\n\r\n          opacity: \"0.8\",\r\n          margin: \"25px auto\",\r\n        }}\r\n      />\r\n      {/* Gallery */}\r\n      <div className=\"gallery\">\r\n        {posts.map((pics) => {\r\n          return (\r\n            <img\r\n              key={pics._id}\r\n              src={pics.photo}\r\n              // onClick={() => {\r\n              //     toggleDetails(pics)\r\n              // }}\r\n              className=\"item\"\r\n            ></img>\r\n          );\r\n        })}\r\n      </div>\r\n      {/* {show &&\r\n        <PostDetail item={posts} toggleDetails={toggleDetails} />\r\n      } */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\Navbar.js",[],[],"C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\MyFollowingPost.js",["106","107","108","109","110"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function MyFolliwngPost() {\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [item, setItem] = useState([]);\r\n\r\n  // Toast functions\r\n  const notifyA = (msg) => toast.error(msg);\r\n  const notifyB = (msg) => toast.success(msg);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (!token) {\r\n      navigate(\"./signup\");\r\n    }\r\n\r\n    // Fetching all posts\r\n    fetch(\"http://localhost:5000/myfollwingpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setData(result);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  // to show and hide comments\r\n  const toggleComment = (posts) => {\r\n    if (show) {\r\n      setShow(false);\r\n    } else {\r\n      setShow(true);\r\n      setItem(posts);\r\n    }\r\n  };\r\n\r\n  const likePost = (id) => {\r\n    fetch(\"http://localhost:5000/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((posts) => {\r\n          if (posts._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return posts;\r\n          }\r\n        });\r\n        setData(newData);\r\n        console.log(result);\r\n      });\r\n  };\r\n  const unlikePost = (id) => {\r\n    fetch(\"http://localhost:5000/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((posts) => {\r\n          if (posts._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return posts;\r\n          }\r\n        });\r\n        setData(newData);\r\n        console.log(result);\r\n      });\r\n  };\r\n\r\n  // function to make comment\r\n  const makeComment = (text, id) => {\r\n    fetch(\"http://localhost:5000/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        text: text,\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((posts) => {\r\n          if (posts._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return posts;\r\n          }\r\n        });\r\n        setData(newData);\r\n        setComment(\"\");\r\n        notifyB(\"Comment posted\");\r\n        console.log(result);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {/* card */}\r\n      {data.map((posts) => {\r\n        return (\r\n          <div className=\"card\">\r\n            {/* card header */}\r\n            <div className=\"card-header\">\r\n              <div className=\"card-pic\">\r\n                <img\r\n                  src=\"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29ufGVufDB8MnwwfHw%3D&auto=format&fit=crop&w=500&q=60\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n              <h5>\r\n                <Link to={`/profile/${posts.postedBy._id}`}>\r\n                  {posts.postedBy.name}\r\n                </Link>\r\n              </h5>\r\n            </div>\r\n            {/* card image */}\r\n            <div className=\"card-image\">\r\n              <img src={posts.photo} alt=\"\" />\r\n            </div>\r\n\r\n            {/* card content */}\r\n            <div className=\"card-content\">\r\n              {posts.likes.includes(\r\n                JSON.parse(localStorage.getItem(\"user\"))._id\r\n              ) ? (\r\n                <span\r\n                  className=\"material-symbols-outlined material-symbols-outlined-red\"\r\n                  onClick={() => {\r\n                    unlikePost(posts._id);\r\n                  }}\r\n                >\r\n                  favorite\r\n                </span>\r\n              ) : (\r\n                <span\r\n                  className=\"material-symbols-outlined\"\r\n                  onClick={() => {\r\n                    likePost(posts._id);\r\n                  }}\r\n                >\r\n                  favorite\r\n                </span>\r\n              )}\r\n\r\n              <p>{posts.likes.length} Likes</p>\r\n              <p>{posts.body} </p>\r\n              <p\r\n                style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  toggleComment(posts);\r\n                }}\r\n              >\r\n                View all comments\r\n              </p>\r\n            </div>\r\n\r\n            {/* add Comment */}\r\n            <div className=\"add-comment\">\r\n              <span className=\"material-symbols-outlined\">mood</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Add a comment\"\r\n                value={comment}\r\n                onChange={(e) => {\r\n                  setComment(e.target.value);\r\n                }}\r\n              />\r\n              <button\r\n                className=\"comment\"\r\n                onClick={() => {\r\n                  makeComment(comment, posts._id);\r\n                }}\r\n              >\r\n                Post\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {/* show Comment */}\r\n      {show && (\r\n        <div className=\"showComment\">\r\n          <div className=\"container\">\r\n            <div className=\"postPic\">\r\n              <img src={item.photo} alt=\"\" />\r\n            </div>\r\n            <div className=\"details\">\r\n              {/* card header */}\r\n              <div\r\n                className=\"card-header\"\r\n                style={{ borderBottom: \"1px solid #00000029\" }}\r\n              >\r\n                <div className=\"card-pic\">\r\n                  <img\r\n                    src=\"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29ufGVufDB8MnwwfHw%3D&auto=format&fit=crop&w=500&q=60\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <h5>{item.postedBy.name}</h5>\r\n              </div>\r\n\r\n              {/* commentSection */}\r\n              <div\r\n                className=\"comment-section\"\r\n                style={{ borderBottom: \"1px solid #00000029\" }}\r\n              >\r\n                {item.comments.map((comment) => {\r\n                  return (\r\n                    <p className=\"comm\">\r\n                      <span\r\n                        className=\"commenter\"\r\n                        style={{ fontWeight: \"bolder\" }}\r\n                      >\r\n                        {comment.postedBy.name}{\" \"}\r\n                      </span>\r\n                      <span className=\"commentText\">{comment.comment}</span>\r\n                    </p>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              {/* card content */}\r\n              <div className=\"card-content\">\r\n                <p>{item.likes.length} Likes</p>\r\n                <p>{item.body}</p>\r\n              </div>\r\n\r\n              {/* add Comment */}\r\n              <div className=\"add-comment\">\r\n                <span className=\"material-symbols-outlined\">mood</span>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Add a comment\"\r\n                  value={comment}\r\n                  onChange={(e) => {\r\n                    setComment(e.target.value);\r\n                  }}\r\n                />\r\n                <button\r\n                  className=\"comment\"\r\n                  onClick={() => {\r\n                    makeComment(comment, item._id);\r\n                    toggleComment();\r\n                  }}\r\n                >\r\n                  Post\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"close-comment\"\r\n            onClick={() => {\r\n              toggleComment();\r\n            }}\r\n          >\r\n            <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\r\n              close\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\Modal.js",[],[],"C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\Createpost.js",["111","112"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Createpost.css\";\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Createpost() {\r\n  const [body, setBody] = useState(\"\");\r\n  const [image, setImage] = useState(\"\")\r\n  const [url, setUrl] = useState(\"\")\r\n  const navigate = useNavigate()\r\n\r\n  // Toast functions\r\n  const notifyA = (msg) => toast.error(msg)\r\n  const notifyB = (msg) => toast.success(msg)\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    // saving post to mongodb\r\n    if (url) {\r\n\r\n      fetch(\"http://localhost:5000/createPost\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n        },\r\n        body: JSON.stringify({\r\n          body,\r\n          pic: url\r\n        })\r\n      }).then(res => res.json())\r\n        .then(data => {\r\n          if (data.error) {\r\n            notifyA(data.error)\r\n          } else {\r\n            notifyB(\"Successfully Posted\")\r\n            navigate(\"/\")\r\n          }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n  }, [url])\r\n\r\n\r\n  // posting image to cloudinary\r\n  const postDetails = () => {\r\n\r\n    console.log(body, image)\r\n    const data = new FormData()\r\n    data.append(\"file\", image)\r\n    data.append(\"upload_preset\", \"insta-clone\")\r\n    data.append(\"cloud_name\", \"cantacloud3\")\r\n    fetch(\"https://api.cloudinary.com/v1_1/cantacloud3/image/upload\", {\r\n      method: \"post\",\r\n      body: data\r\n    }).then(res => res.json())\r\n      .then(data => setUrl(data.url))\r\n      .catch(err => console.log(err))\r\n    console.log(url)\r\n\r\n  }\r\n\r\n\r\n  const loadfile = (event) => {\r\n    var output = document.getElementById(\"output\");\r\n    output.src = URL.createObjectURL(event.target.files[0]);\r\n    output.onload = function () {\r\n      URL.revokeObjectURL(output.src); // free memory\r\n    };\r\n  };\r\n  return (\r\n    <div className=\"createPost\">\r\n      {/* //header */}\r\n      <div className=\"post-header\">\r\n        <h4 style={{ margin: \"3px auto\" }}>Create New Post</h4>\r\n        <button id=\"post-btn\" onClick={() => { postDetails() }}>Share</button>\r\n      </div>\r\n      {/* image preview */}\r\n      <div className=\"main-div\">\r\n        <img\r\n          id=\"output\"\r\n          src=\"https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-image-512.png\"\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={(event) => {\r\n            loadfile(event);\r\n            setImage(event.target.files[0])\r\n          }}\r\n        />\r\n      </div>\r\n      {/* details */}\r\n      <div className=\"details\">\r\n        <div className=\"card-header\">\r\n          <div className=\"card-pic\">\r\n            <img\r\n              src=\"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29ufGVufDB8MnwwfHw%3D&auto=format&fit=crop&w=500&q=60\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <h5>{JSON.parse(localStorage.getItem(\"user\")).name}</h5>\r\n        </div>\r\n        <textarea value={body} onChange={(e) => {\r\n          setBody(e.target.value)\r\n        }} type=\"text\" placeholder=\"Write a caption....\"></textarea>\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\context\\LoginContext.js",["113"],[],"import React, { createContext } from 'react';\r\nexport const LoginContext = createContext()","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\PostDetail.js",["114"],[],"import React from \"react\";\r\nimport \"./PostDetail.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function PostDetail({ item, toggleDetails }) {\r\n  const navigate = useNavigate();\r\n\r\n  // Toast functions\r\n  const notifyA = (msg) => toast.error(msg);\r\n  const notifyB = (msg) => toast.success(msg);\r\n\r\n  const removePost = (postId) => {\r\n    if (window.confirm(\"Do you really want to delete this post ?\")) {\r\n      fetch(`/deletePost/${postId}`, {\r\n        method: \"delete\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n      })\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          console.log(result);\r\n          toggleDetails();\r\n          navigate(\"/\");\r\n          notifyB(result.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"showComment\">\r\n      <div className=\"container\">\r\n        <div className=\"postPic\">\r\n          <img src={item.photo} alt=\"\" />\r\n        </div>\r\n        <div className=\"details\">\r\n          {/* card header */}\r\n          <div\r\n            className=\"card-header\"\r\n            style={{ borderBottom: \"1px solid #00000029\" }}\r\n          >\r\n            <div className=\"card-pic\">\r\n              <img\r\n                src=\"https://images.unsplash.com/photo-1570295999919-56ceb5ecca61?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cGVyc29ufGVufDB8MnwwfHw%3D&auto=format&fit=crop&w=500&q=60\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <h5>{item.postedBy.name}</h5>\r\n            <div\r\n              className=\"deletePost\"\r\n              onClick={() => {\r\n                removePost(item._id);\r\n              }}\r\n            >\r\n              <span className=\"material-symbols-outlined\">delete</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* commentSection */}\r\n          <div\r\n            className=\"comment-section\"\r\n            style={{ borderBottom: \"1px solid #00000029\" }}\r\n          >\r\n            {item.comments.map((comment) => {\r\n              return (\r\n                <p className=\"comm\">\r\n                  <span className=\"commenter\" style={{ fontWeight: \"bolder\" }}>\r\n                    {comment.postedBy.name}{\" \"}\r\n                  </span>\r\n                  <span className=\"commentText\">{comment.comment}</span>\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* card content */}\r\n          <div className=\"card-content\">\r\n            <p>{item.likes.length} Likes</p>\r\n            <p>{item.body}</p>\r\n          </div>\r\n\r\n          {/* add Comment */}\r\n          <div className=\"add-comment\">\r\n            <span className=\"material-symbols-outlined\">mood</span>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Add a comment\"\r\n              //   value={comment}\r\n              //   onChange={(e) => {\r\n              //     setComment(e.target.value);\r\n              //   }}\r\n            />\r\n            <button\r\n              className=\"comment\"\r\n              //   onClick={() => {\r\n              //     makeComment(comment, item._id);\r\n              //     toggleComment();\r\n              //   }}\r\n            >\r\n              Post\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"close-comment\"\r\n        onClick={() => {\r\n          toggleDetails();\r\n        }}\r\n      >\r\n        <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\r\n          close\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Umang\\Desktop\\instagram\\backend\\pictogram\\src\\components\\ProfilePic.js",["115","116"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default function ProfilePic({ changeprofile }) {\r\n  const hiddenFileInput = useRef(null);\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n\r\n  // posting image to cloudinary\r\n  const postDetails = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"insta-clone\");\r\n    data.append(\"cloud_name\", \"cantacloud2\");\r\n    fetch(\"https://api.cloudinary.com/v1_1/cantacloud2/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setUrl(data.url))\r\n      .catch((err) => console.log(err));\r\n    console.log(url);\r\n  };\r\n\r\n  const postPic = () => {\r\n    // saving post to mongodb\r\n    fetch(\"/uploadProfilePic\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        pic: url,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        changeprofile();\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    hiddenFileInput.current.click();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      postDetails();\r\n    }\r\n  }, [image]);\r\n  useEffect(() => {\r\n    if (url) {\r\n      postPic();\r\n    }\r\n  }, [url]);\r\n  return (\r\n    <div className=\"profilePic darkBg\">\r\n      <div className=\"changePic centered\">\r\n        <div>\r\n          <h2>Change Profile Photo</h2>\r\n        </div>\r\n        <div style={{ borderTop: \"1px solid #00000030\" }}>\r\n          <button\r\n            className=\"upload-btn\"\r\n            style={{ color: \"#1EA1F7\" }}\r\n            onClick={handleClick}\r\n          >\r\n            Upload Photo\r\n          </button>\r\n          <input\r\n            type=\"file\"\r\n            ref={hiddenFileInput}\r\n            accept=\"image/*\"\r\n            style={{ display: \"none\" }}\r\n            onChange={(e) => {\r\n              setImage(e.target.files[0]);\r\n            }}\r\n          />\r\n        </div>\r\n        <div style={{ borderTop: \"1px solid #00000030\" }}>\r\n          <button className=\"upload-btn\" style={{ color: \"#ED4956\" }}>\r\n            {\" \"}\r\n            Remove Current Photo\r\n          </button>\r\n        </div>\r\n        <div style={{ borderTop: \"1px solid #00000030\" }}>\r\n          <button\r\n            style={{\r\n              background: \"none\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"15px\",\r\n            }}\r\n            onClick={changeprofile}\r\n          >\r\n            cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}",{"ruleId":"117","severity":1,"message":"118","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":12},{"ruleId":"117","severity":1,"message":"121","line":2,"column":17,"nodeType":"119","messageId":"120","endLine":2,"endColumn":30},{"ruleId":"122","severity":1,"message":"123","line":20,"column":29,"nodeType":"124","messageId":"125","endLine":20,"endColumn":30,"suggestions":"126"},{"ruleId":"122","severity":1,"message":"123","line":20,"column":45,"nodeType":"124","messageId":"125","endLine":20,"endColumn":46,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"128","line":21,"column":65,"nodeType":"124","messageId":"125","endLine":21,"endColumn":66,"suggestions":"129"},{"ruleId":"122","severity":1,"message":"130","line":21,"column":68,"nodeType":"124","messageId":"125","endLine":21,"endColumn":69,"suggestions":"131"},{"ruleId":"122","severity":1,"message":"132","line":21,"column":71,"nodeType":"124","messageId":"125","endLine":21,"endColumn":72,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":46,"column":6,"nodeType":"136","endLine":46,"endColumn":8,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":81,"column":18,"nodeType":"140","endLine":85,"endColumn":30},{"ruleId":"122","severity":1,"message":"123","line":18,"column":29,"nodeType":"124","messageId":"125","endLine":18,"endColumn":30,"suggestions":"141"},{"ruleId":"122","severity":1,"message":"123","line":18,"column":45,"nodeType":"124","messageId":"125","endLine":18,"endColumn":46,"suggestions":"142"},{"ruleId":"117","severity":1,"message":"143","line":16,"column":9,"nodeType":"119","messageId":"120","endLine":16,"endColumn":16},{"ruleId":"134","severity":1,"message":"144","line":37,"column":6,"nodeType":"136","endLine":37,"endColumn":8,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":63,"column":25,"nodeType":"148","messageId":"149","endLine":63,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":87,"column":25,"nodeType":"148","messageId":"149","endLine":87,"endColumn":27},{"ruleId":"117","severity":1,"message":"150","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":18},{"ruleId":"134","severity":1,"message":"151","line":72,"column":6,"nodeType":"136","endLine":72,"endColumn":16,"suggestions":"152"},{"ruleId":"138","severity":1,"message":"139","line":124,"column":13,"nodeType":"140","endLine":131,"endColumn":14},{"ruleId":"117","severity":1,"message":"143","line":15,"column":9,"nodeType":"119","messageId":"120","endLine":15,"endColumn":16},{"ruleId":"134","severity":1,"message":"144","line":36,"column":6,"nodeType":"136","endLine":36,"endColumn":8,"suggestions":"153"},{"ruleId":"146","severity":1,"message":"147","line":62,"column":25,"nodeType":"148","messageId":"149","endLine":62,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":86,"column":25,"nodeType":"148","messageId":"149","endLine":86,"endColumn":27},{"ruleId":"146","severity":1,"message":"147","line":113,"column":25,"nodeType":"148","messageId":"149","endLine":113,"endColumn":27},{"ruleId":"134","severity":1,"message":"154","line":44,"column":6,"nodeType":"136","endLine":44,"endColumn":11,"suggestions":"155"},{"ruleId":"138","severity":1,"message":"139","line":82,"column":9,"nodeType":"140","endLine":85,"endColumn":11},{"ruleId":"117","severity":1,"message":"156","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"117","severity":1,"message":"143","line":10,"column":9,"nodeType":"119","messageId":"120","endLine":10,"endColumn":16},{"ruleId":"134","severity":1,"message":"157","line":53,"column":6,"nodeType":"136","endLine":53,"endColumn":13,"suggestions":"158"},{"ruleId":"134","severity":1,"message":"159","line":58,"column":6,"nodeType":"136","endLine":58,"endColumn":11,"suggestions":"160"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'createContext' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["161","162"],["163","164"],"Unnecessary escape character: \\$.",["165","166"],"Unnecessary escape character: \\^.",["167","168"],"Unnecessary escape character: \\*.",["169","170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pic'. Either include it or remove the dependency array.","ArrayExpression",["171"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["172","173"],["174","175"],"'notifyA' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["176"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PostDetail' is defined but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["177"],["178"],"React Hook useEffect has missing dependencies: 'body' and 'navigate'. Either include them or remove the dependency array.",["179"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'postDetails'. Either include it or remove the dependency array.",["180"],"React Hook useEffect has a missing dependency: 'postPic'. Either include it or remove the dependency array.",["181"],{"messageId":"182","fix":"183","desc":"184"},{"messageId":"185","fix":"186","desc":"187"},{"messageId":"182","fix":"188","desc":"184"},{"messageId":"185","fix":"189","desc":"187"},{"messageId":"182","fix":"190","desc":"184"},{"messageId":"185","fix":"191","desc":"187"},{"messageId":"182","fix":"192","desc":"184"},{"messageId":"185","fix":"193","desc":"187"},{"messageId":"182","fix":"194","desc":"184"},{"messageId":"185","fix":"195","desc":"187"},{"desc":"196","fix":"197"},{"messageId":"182","fix":"198","desc":"184"},{"messageId":"185","fix":"199","desc":"187"},{"messageId":"182","fix":"200","desc":"184"},{"messageId":"185","fix":"201","desc":"187"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"202","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"removeEscape",{"range":"213","text":"214"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"215","text":"216"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"217","text":"214"},{"range":"218","text":"216"},{"range":"219","text":"214"},{"range":"220","text":"216"},{"range":"221","text":"214"},{"range":"222","text":"216"},{"range":"223","text":"214"},{"range":"224","text":"216"},"Update the dependencies array to be: [pic]",{"range":"225","text":"226"},{"range":"227","text":"214"},{"range":"228","text":"216"},{"range":"229","text":"214"},{"range":"230","text":"216"},"Update the dependencies array to be: [navigate]",{"range":"231","text":"232"},"Update the dependencies array to be: [isFollow, userid]",{"range":"233","text":"234"},{"range":"235","text":"232"},"Update the dependencies array to be: [body, navigate, url]",{"range":"236","text":"237"},"Update the dependencies array to be: [image, postDetails]",{"range":"238","text":"239"},"Update the dependencies array to be: [postPic, url]",{"range":"240","text":"241"},[597,598],"",[597,597],"\\",[613,614],[613,613],[704,705],[704,704],[707,708],[707,707],[710,711],[710,710],[1169,1171],"[pic]",[632,633],[632,632],[648,649],[648,648],[1100,1102],"[navigate]",[1892,1902],"[isFollow, userid]",[1062,1064],[1156,1161],"[body, navigate, url]",[1423,1430],"[image, postDetails]",[1501,1506],"[postPic, url]"]